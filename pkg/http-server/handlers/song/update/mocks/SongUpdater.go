// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	models "github.com/leyl1ne/rest-api-parser/pkg/models"
	mock "github.com/stretchr/testify/mock"
)

// SongUpdater is an autogenerated mock type for the SongUpdater type
type SongUpdater struct {
	mock.Mock
}

// UpdateSong provides a mock function with given fields: id, updatedSong
func (_m *SongUpdater) UpdateSong(id int, updatedSong models.Song) error {
	ret := _m.Called(id, updatedSong)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, models.Song) error); ok {
		r0 = rf(id, updatedSong)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewSongUpdater interface {
	mock.TestingT
	Cleanup(func())
}

// NewSongUpdater creates a new instance of SongUpdater. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSongUpdater(t mockConstructorTestingTNewSongUpdater) *SongUpdater {
	mock := &SongUpdater{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
